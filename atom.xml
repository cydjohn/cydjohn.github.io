<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BAZINGA</title>
  
  <subtitle>BAZINGA&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://caoyudong.com/"/>
  <updated>2019-06-28T05:34:02.660Z</updated>
  <id>http://caoyudong.com/</id>
  
  <author>
    <name>BAZINGA</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React-Native推送消息</title>
    <link href="http://caoyudong.com/2019/06/28/React-Native%E6%8E%A8%E9%80%81%E6%B6%88%E6%81%AF/"/>
    <id>http://caoyudong.com/2019/06/28/React-Native推送消息/</id>
    <published>2019-06-28T05:28:20.000Z</published>
    <updated>2019-06-28T05:34:02.660Z</updated>
    
    <content type="html"><![CDATA[<p>这里我基本上直接用的<a href="https://github.com/zo0r/react-native-push-notification" target="_blank" rel="noopener">react-native-push-notification</a>， 但是使用途中还是遇到了几个小坑，费了一些时间才解决掉，这里记录下步骤。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save react-native-push-notification</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-native-push-notification</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native link react-native-push-notification</span><br></pre></td></tr></table></figure><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>iOS 安装需要手动把<code>react-native-push-notification</code> 项目添加到自己的项目里面。</p><p>右键点击工程目录下的<code>Libraries</code>-&gt;<code>Add Files</code></p><p><img src="../../../../image/e67afc58-5231-4b21-908e-a58db0ab969b.png" alt=""></p><p>在<code>node_modules/react-native/Libraries/PushNotificationIOS</code>文件夹下找到 <code>RCTPushNotification.xcodeproj</code> 点击添加</p><p><img src="../../../../image/4a625874-2e88-4c2c-87cf-adf784a64ca0.png" alt=""></p><p>然后在 <code>General</code> -&gt; <code>Linked Frameworks and Libraries</code> 添加 <code>libRCTPushNotifaction.a</code></p><p><img src="../../../../image/6c52675c-ffde-4f53-9317-82fbb691efe3.png" alt=""></p><p> 找到 <code>Capabilities</code> -&gt; <code>Background Modes</code>， 选中 <code>Remote notifications</code>以及 <code>Background Modes</code> -&gt; <code>Remote notifications</code>。</p><p><img src="../../../../image/267b5dba-5c17-4a9c-9408-ba8c4a09f7c7.png" alt=""></p><blockquote><p>如果找不到Remote notifications，说明你的开发者账号不支持推送，需要换一个账号（应该是要充了钱那种。</p></blockquote><p>在AppDelegate.m 中添加</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;React/RCTPushNotificationManager.h&gt;</span></span></span><br><span class="line">......</span><br><span class="line"> <span class="comment">// Required to register for notifications</span></span><br><span class="line"> - (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didRegisterUserNotificationSettings:(<span class="built_in">UIUserNotificationSettings</span> *)notificationSettings</span><br><span class="line"> &#123;</span><br><span class="line">  [RCTPushNotificationManager didRegisterUserNotificationSettings:notificationSettings];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// Required for the register event.</span></span><br><span class="line"> - (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didRegisterForRemoteNotificationsWithDeviceToken:(<span class="built_in">NSData</span> *)deviceToken</span><br><span class="line"> &#123;</span><br><span class="line">  [RCTPushNotificationManager didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// Required for the notification event. You must call the completion handler after handling the remote notification.</span></span><br><span class="line"> - (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didReceiveRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo</span><br><span class="line">                                                        fetchCompletionHandler:(<span class="keyword">void</span> (^)(<span class="built_in">UIBackgroundFetchResult</span>))completionHandler</span><br><span class="line"> &#123;</span><br><span class="line">   [RCTPushNotificationManager didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// Required for the registrationError event.</span></span><br><span class="line"> - (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error</span><br><span class="line"> &#123;</span><br><span class="line">  [RCTPushNotificationManager didFailToRegisterForRemoteNotificationsWithError:error];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// Required for the localNotification event.</span></span><br><span class="line"> - (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didReceiveLocalNotification:(<span class="built_in">UILocalNotification</span> *)notification</span><br><span class="line"> &#123;</span><br><span class="line">  [RCTPushNotificationManager didReceiveLocalNotification:notification];</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="获取推送证书"><a href="#获取推送证书" class="headerlink" title="获取推送证书"></a>获取推送证书</h3><p>从<a href="https://developer.apple.com/account/" target="_blank" rel="noopener">苹果开发者中心</a>登录。</p><p>选择 <code>Certificates</code> -&gt; <code>Identifiers &amp; Profiles</code> -&gt; <code>Keys ▸ All</code>， 点击 <code>+</code> 创建一个新的密钥。</p><p>给密钥随便取个名字，比如<code>Push Notification Key</code> ， 然后选中<code>Apple Push Notifications service (APNs)</code>。</p><p><img src="../../../../image/e01eb1db-fa4f-4bbf-8b5b-f158ab3efe5b.jpeg" alt=""></p><p>点击<code>Continue</code> 然后<code>Confirm</code>，下载生成的密钥。密钥命名会像这样：<code>AuthKey_4SVKWF966R.p8</code>，其中 <code>4SVKWF966R</code> 就是 <code>Key ID</code>。此外我们还需要 <code>Team ID</code>，可以在<a href="https://developer.apple.com/account/#/membership" target="_blank" rel="noopener">这个页面</a>找到。</p><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>在 <code>AndroidManifest.xml</code>里面添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt; Only if you're using GCM or localNotificationSchedule() &gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">permission</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"$&#123;applicationId&#125;.permission.C2D_MESSAGE"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:protectionLevel</span>=<span class="string">"signature"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"$&#123;applicationId&#125;.permission.C2D_MESSAGE"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt; Only if you're using GCM or localNotificationSchedule() &gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.VIBRATE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_BOOT_COMPLETED"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">application</span> <span class="attr">....</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span>  <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.notification_channel_name"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"YOUR NOTIFICATION CHANNEL NAME"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span>  <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.notification_channel_description"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:value</span>=<span class="string">"YOUR NOTIFICATION CHANNEL DESCRIPTION"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Change the resource name to your App's accent color - or any other color you want --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span>  <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.notification_color"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:resource</span>=<span class="string">"@android:color/white"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt; Only if you're using GCM or localNotificationSchedule() &gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.google.android.gms.gcm.GcmReceiver"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:exported</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:permission</span>=<span class="string">"com.google.android.c2dm.permission.SEND"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.c2dm.intent.RECEIVE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"$&#123;applicationId&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt; Only if you're using GCM or localNotificationSchedule() &gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.modules.RNPushNotificationPublisher"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.BOOT_COMPLETED"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.modules.RNPushNotificationRegistrationService"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt; Only if you're using GCM or localNotificationSchedule() &gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerServiceGcm"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:exported</span>=<span class="string">"false"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.c2dm.intent.RECEIVE"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;/ Only if you're using GCM or localNotificationSchedule() &gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt; Else &gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerService"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:exported</span>=<span class="string">"false"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.google.firebase.MESSAGING_EVENT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;/Else&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>android/app/src/res/values/colors.xml</code>里面添加 <strong>很关键！</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">"white"</span>&gt;</span>#FFF<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>android/settings.gradle</code>中（运行react-native link时应该自动添加了）：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">':react-native-push-notification'</span></span><br><span class="line"><span class="keyword">project</span>(<span class="string">':react-native-push-notification'</span>).projectDir = <span class="keyword">file</span>(‘..<span class="regexp">/node_modules/</span>react-<span class="keyword">native</span>-<span class="keyword">push</span>-notification<span class="regexp">/android')</span></span><br></pre></td></tr></table></figure><p><code>MainApplication.java</code> 中（运行react-native link时应该自动添加了）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.dieam.reactnativepushnotification.ReactNativePushNotificationPackage;  <span class="comment">// &lt;--- Import Package</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> <span class="keyword">implements</span> <span class="title">ReactApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ReactNativeHost mReactNativeHost = <span class="keyword">new</span> ReactNativeHost(<span class="keyword">this</span>) &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">getUseDeveloperSupport</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BuildConfig.DEBUG;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">protected</span> List&lt;ReactPackage&gt; <span class="title">getPackages</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line">          <span class="keyword">new</span> MainReactPackage(),</span><br><span class="line">          <span class="keyword">new</span> ReactNativePushNotificationPackage() <span class="comment">// &lt;---- Add the Package</span></span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PushNotification = <span class="built_in">require</span>(<span class="string">'react-native-push-notification'</span>);</span><br><span class="line"></span><br><span class="line">PushNotification.configure(&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (optional) Called when Token is generated (iOS and Android)</span></span><br><span class="line">    onRegister: <span class="function"><span class="keyword">function</span>(<span class="params">token</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log( <span class="string">'TOKEN:'</span>, token );</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (required) Called when a remote or local notification is opened or received</span></span><br><span class="line">    onNotification: <span class="function"><span class="keyword">function</span>(<span class="params">notification</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log( <span class="string">'NOTIFICATION:'</span>, notification );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// process the notification</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// required on iOS only (see fetchCompletionHandler docs: https://facebook.github.io/react-native/docs/pushnotificationios.html)</span></span><br><span class="line">        notification.finish(PushNotificationIOS.FetchResult.NoData);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ANDROID ONLY: GCM or FCM Sender ID (product_number) (optional - not required for local notifications, but is need to receive remote push notifications)</span></span><br><span class="line">    senderID: <span class="string">"YOUR GCM (OR FCM) SENDER ID"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IOS ONLY (optional): default: all - Permissions to register.</span></span><br><span class="line">    permissions: &#123;</span><br><span class="line">        alert: <span class="literal">true</span>,</span><br><span class="line">        badge: <span class="literal">true</span>,</span><br><span class="line">        sound: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Should the initial notification be popped automatically</span></span><br><span class="line">    <span class="comment">// default: true</span></span><br><span class="line">    popInitialNotification: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * (optional) default: true</span></span><br><span class="line"><span class="comment">      * - Specified if permissions (ios) and token (android and ios) will requested or not,</span></span><br><span class="line"><span class="comment">      * - if not, you must call PushNotificationsHandler.requestPermissions() later</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    requestPermissions: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其中：<br><code>onRegister()</code>获得的token为每个设备唯一的识别号，需要记录下来，推送会用到。</p><p><code>senderID</code>是谷歌firebase的推送id，如果不用谷歌的firebase可以不用管这里。</p><h3 id="注册Firebase"><a href="#注册Firebase" class="headerlink" title="注册Firebase"></a>注册Firebase</h3><p>我这里使用谷歌firebase，国内应该有别的推送服务比如极光推送，小米推送等等。</p><p>先到<a href="https://console.firebase.google.com" target="_blank" rel="noopener">firebase</a>创建一个项目，名字随便取。</p><p><img src="../../../../image/3166d13a-8c0e-4b80-8dee-7f74b3978d97.png" alt=""></p><p>然后注册一个新的安卓应用，其中安卓软件包名就是<code>build.gradle</code> 文件中的 <code>applicationId</code></p><p><img src="../../../../image/547bd056-5d86-4451-9e96-3b1d310286f3.png" alt=""></p><p>点击下一步，根据提示下载<code>google-services.json</code><br>然后把“google-services.json”文件移至 Android 应用模块的根目录。</p><p><img src="../../../../image/8804917f-21ed-4f63-b036-1620757b1d2b.png" alt=""></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>下载 <a href="https://github.com/onmyway133/PushNotifications" target="_blank" rel="noopener">Push Notification Tester</a>， 这是一个可以用来测试iOS消息推送的软件，软件界面如下。填入<code>Key ID</code>，<code>Team ID</code>，密钥，<code>bundle id</code>以及获取的设备码，点击send即可测试。</p><p><img src="../../../../image/210c34da-55a7-488c-98a3-929a868ab03f.png" alt=""></p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/zo0r/react-native-push-notification" target="_blank" rel="noopener">https://github.com/zo0r/react-native-push-notification</a></p><p><a href="https://facebook.github.io/react-native/docs/pushnotificationios.html#content" target="_blank" rel="noopener">https://facebook.github.io/react-native/docs/pushnotificationios.html#content</a></p><p><a href="https://www.raywenderlich.com/8164-push-notifications-tutorial-getting-started" target="_blank" rel="noopener">https://www.raywenderlich.com/8164-push-notifications-tutorial-getting-started</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里我基本上直接用的&lt;a href=&quot;https://github.com/zo0r/react-native-push-notification&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;react-native-push-notification&lt;/a&gt;， 但是使用途中还是遇到了几个小坑，费了一些时间才解决掉，这里记录下步骤。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React-Native" scheme="http://caoyudong.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04上使用Nginx部署Laravel应用程序</title>
    <link href="http://caoyudong.com/2019/05/21/Ubuntu16-04%E4%B8%8A%E4%BD%BF%E7%94%A8Nginx%E9%83%A8%E7%BD%B2Laravel%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    <id>http://caoyudong.com/2019/05/21/Ubuntu16-04上使用Nginx部署Laravel应用程序/</id>
    <published>2019-05-21T06:16:40.000Z</published>
    <updated>2019-05-21T22:41:37.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-16-04上使用Nginx部署Laravel应用程序"><a href="#Ubuntu-16-04上使用Nginx部署Laravel应用程序" class="headerlink" title="Ubuntu 16.04上使用Nginx部署Laravel应用程序"></a>Ubuntu 16.04上使用Nginx部署Laravel应用程序</h1><p>Laravel 是一个非常流行的PHP框架，以编码风格优雅著称，每行代码都非常简洁，富有表达力，并且拥有强大的组件开发生态，号称为web艺术家创造的PHP框架。我最近的个人项目尝试了下Laravel框架，部署的的时候遇到了一些坑，这里记录下。</p><p>我用的服务器是DigitalOcean的Ubuntu 16.04 LTS，其他公司的服务器应该也大同小异，有一些公司甚至简化了安装流程，几乎不用改动配置文件就可以让自己的程序跑起来（比如阿里云</p><a id="more"></a><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><h3 id="更新apt-get"><a href="#更新apt-get" class="headerlink" title="更新apt-get"></a>更新apt-get</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="安装-php7-0"><a href="#安装-php7-0" class="headerlink" title="安装 php7.0"></a>安装 php7.0</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0-mbstring php7.0-fpm php7.0-xml composer unzip</span><br></pre></td></tr></table></figure><h2 id="配置MySql"><a href="#配置MySql" class="headerlink" title="配置MySql"></a>配置MySql</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><p>安装期间会提示你设置新的密码，一定要记住了。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>登录MySQL root 账号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>然后创建一个名为 laravel 的数据库，数据库可以是别的名字：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> laravel <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_unicode_ci;</span><br></pre></td></tr></table></figure><p>然后再创建一个允许访问这个数据库的用户，这里使用 laraveluser 作为用户名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> laravel.* <span class="keyword">TO</span> <span class="string">'laraveluser'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure><p>刷新权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><p>退出</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXIT;</span><br></pre></td></tr></table></figure><h3 id="安装-pdo-mysql"><a href="#安装-pdo-mysql" class="headerlink" title="安装 pdo_mysql"></a>安装 pdo_mysql</h3><p>pdo_mysql 是php需要用到的mysql的驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0-mysql</span><br></pre></td></tr></table></figure><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h2 id="安装-laravel"><a href="#安装-laravel" class="headerlink" title="安装 laravel"></a>安装 laravel</h2><p>这里使用laravel 发布在GitHub 上的演示程序 QuickStart 来作为例子。</p><p>先在nginx目录下创建一个叫quickstart的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/www/html/quickstart</span><br></pre></td></tr></table></figure><p>然后到新目录将项目git clone 下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html/quickstart</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/laravel/quickstart-basic .</span><br></pre></td></tr></table></figure><blockquote><p>注意 git clone 最后有个点</p></blockquote><p>然后安装laravel的依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure><h2 id="配置-env"><a href="#配置-env" class="headerlink" title="配置 .env"></a>配置 .env</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .env</span><br></pre></td></tr></table></figure><p>修改数据库字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">APP_ENV=local</span><br><span class="line">APP_DEBUG=true</span><br><span class="line">APP_KEY=b809vCwvtawRbsG0BmP1tWgnlXQfdsaw</span><br><span class="line">APP_URL=http://localhost</span><br><span class="line"></span><br><span class="line">DB_HOST=127.0.0.1</span><br><span class="line">DB_DATABASE=laravel</span><br><span class="line">DB_USERNAME=laraveluser</span><br><span class="line">DB_PASSWORD=password</span><br></pre></td></tr></table></figure><p>保存，退出</p><p>迁移数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><h2 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h2><p>将storage和bootstrap/cache目录的组所有权更改为www-data， 因为服务器需要向这两个文件夹里面写东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chgrp -R www-data storage bootstrap/cache</span><br><span class="line">sudo chmod -R ug+rwx storage bootstrap/cache</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line">        root /var/www/html/quickstart/public;</span><br><span class="line"></span><br><span class="line">        # Add index.php to the list if you are using PHP</span><br><span class="line">        index index.php index.html index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        server_name _;</span><br><span class="line">                location / &#123;</span><br><span class="line">                </span><br><span class="line">                try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">        &#125;</span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">                include snippets/fastcgi-php.conf;</span><br><span class="line">        #</span><br><span class="line">        #       # With php7.0-cgi alone:</span><br><span class="line">        #       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        #       # With php7.0-fpm:</span><br><span class="line">                fastcgi_pass unix:/run/php/php7.0-fpm.sock;</span><br><span class="line">        &#125;</span><br><span class="line">        # deny access to .htaccess files, if Apache's document root</span><br><span class="line">        # concurs with nginx's one</span><br><span class="line">        #</span><br><span class="line">        location ~ /\.ht &#123;</span><br><span class="line">                deny all;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>现在访问服务器IP地址就可以浏览网页了。</p><hr><h2 id="我遇到过的报错"><a href="#我遇到过的报错" class="headerlink" title="我遇到过的报错"></a>我遇到过的报错</h2><h3 id="Operation-timed-out-IPv6-issues"><a href="#Operation-timed-out-IPv6-issues" class="headerlink" title="Operation timed out (IPv6 issues)"></a>Operation timed out (IPv6 issues)</h3><p><em>You may run into errors if IPv6 is not configured correctly. A common error is:<br>The “<a href="https://getcomposer.org/version&quot;" target="_blank" rel="noopener">https://getcomposer.org/version&quot;</a> file could not be downloaded: failed to<br>open stream: Operation timed out</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">"echo 'precedence ::ffff:0:0/96 100' &gt;&gt; /etc/gai.conf"</span></span><br></pre></td></tr></table></figure><h3 id="No-application-encryption-key-has-been-specified"><a href="#No-application-encryption-key-has-been-specified" class="headerlink" title="No application encryption key has been specified."></a>No application encryption key has been specified.</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure><h3 id="Laravel-5-4-Specified-key-was-too-long-error"><a href="#Laravel-5-4-Specified-key-was-too-long-error" class="headerlink" title="Laravel 5.4: Specified key was too long error"></a>Laravel 5.4: Specified key was too long error</h3><p>  <em>1   PDOException::(“SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes”)<br>      /home/pi/Desktop/kxcrmserver/vendor/laravel/framework/src/Illuminate/Database/Connection.php:458<br>  2   PDOStatement::execute()<br>      /home/pi/Desktop/kxcrmserver/vendor/laravel/framework/src/Illuminate/Database/Connection.php:458</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span> </span>&#123; </span><br><span class="line">Schema::defaultStringLength(<span class="number">191</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx 的错误日志在这个位置：<code>/var/log/nginx/error.log</code>，大部分问题都需要查看日志然后单独解决。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ubuntu-16-04上使用Nginx部署Laravel应用程序&quot;&gt;&lt;a href=&quot;#Ubuntu-16-04上使用Nginx部署Laravel应用程序&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 16.04上使用Nginx部署Laravel应用程序&quot;&gt;&lt;/a&gt;Ubuntu 16.04上使用Nginx部署Laravel应用程序&lt;/h1&gt;&lt;p&gt;Laravel 是一个非常流行的PHP框架，以编码风格优雅著称，每行代码都非常简洁，富有表达力，并且拥有强大的组件开发生态，号称为web艺术家创造的PHP框架。我最近的个人项目尝试了下Laravel框架，部署的的时候遇到了一些坑，这里记录下。&lt;/p&gt;
&lt;p&gt;我用的服务器是DigitalOcean的Ubuntu 16.04 LTS，其他公司的服务器应该也大同小异，有一些公司甚至简化了安装流程，几乎不用改动配置文件就可以让自己的程序跑起来（比如阿里云&lt;/p&gt;
    
    </summary>
    
    
      <category term="laravel" scheme="http://caoyudong.com/tags/laravel/"/>
    
      <category term="nginx" scheme="http://caoyudong.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>React-Native跨平台调用代码</title>
    <link href="http://caoyudong.com/2018/12/11/React-Native%E8%B7%A8%E5%B9%B3%E5%8F%B0%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81/"/>
    <id>http://caoyudong.com/2018/12/11/React-Native跨平台调用代码/</id>
    <published>2018-12-12T05:31:38.000Z</published>
    <updated>2018-12-13T04:27:10.708Z</updated>
    
    <content type="html"><![CDATA[<p>有时候React-Native需要访问原生API，但是官方并没有封装，这时候就需要自己手动调用原生代码，比如调用安卓的Toast，比如需要调用某些硬件接口。这篇文章主要记录了如何调用安卓和iOS原生方法。</p><a id="more"></a><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>首先创建一个<code>bridge</code>文件，我这里叫MessageBridge，继承RCTEventEmitter类，以及实现RCTBridgeModule协议，如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &lt;React/RCTBridgeModule.h&gt;</span><br><span class="line">#import &lt;React/RCTEventEmitter.h&gt;</span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">@interface MessageBridge : RCTEventEmitter&lt;RCTBridgeModule&gt;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>为了实现RCTBridgeModule协议，类里面还需要加上RCT_EXPORT_MODULE()宏。这个宏是为了导出模块的方法给Javascript，假设不传递参数给他就默认导出当前类的名字，如果指定了Javascript调用的就是你指定的名字。比如下面代码在JavaScript中看到的模块名字就是<code>MessageBridge</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;MessageBridge.h&quot;</span><br><span class="line">@implementation MessageBridge</span><br><span class="line">RCT_EXPORT_MODULE();</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>消息传递我分了两类，一个是从原生平台直接回调消息，一个是原生平台给JavaScript推送消息。</p><h3 id="回调消息"><a href="#回调消息" class="headerlink" title="回调消息"></a>回调消息</h3><p>iOS可以直接实现一个Promise给React-Native。使用ES2016中的<code>async/await</code>关键字可以极大的简化代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">RCT_REMAP_METHOD(getMessage,:(NSString *)message</span><br><span class="line">                 findEventsWithResolver:(RCTPromiseResolveBlock)resolve</span><br><span class="line">                 rejecter:(RCTPromiseRejectBlock)reject)</span><br><span class="line">&#123;</span><br><span class="line">  NSDictionary *data = @&#123;@&quot;success&quot;:@YES,@&quot;message&quot;:[message stringByAppendingString:@&quot; (Promises)&quot;]&#125;;</span><br><span class="line">  if (data) &#123;</span><br><span class="line">    resolve(data);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    NSError *error = [[NSError alloc] initWithDomain:@&quot;show&quot; code:200 userInfo:nil];</span><br><span class="line">    reject(@&quot;no_events&quot;, @&quot;There were no events&quot;, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的话JavaScript可以得到一个Promise，使用<code>await</code>关键字就可以得到回调的值了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> getMessage() &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> data = <span class="keyword">await</span> MessageBridge.getMessage(<span class="string">'Get Message'</span>);</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123; <span class="string">"getMessage"</span>: data.message &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="推送消息"><a href="#推送消息" class="headerlink" title="推送消息"></a>推送消息</h3><p>对于某些特殊情况需要从原生平台推送消息给React-Native，我们可以通过实现<code>supportedEvents</code>方法然后调用<code>self sendEventWithNam:：</code>就可以完成消息的推送了。</p><blockquote><p>注意supportedEvents一定要实现不然会报错。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;MessageBridge.h&quot;</span><br><span class="line">@implementation MessageBridge</span><br><span class="line">RCT_EXPORT_MODULE();</span><br><span class="line">RCT_REMAP_METHOD(pushMessage,:(NSString *)message)</span><br><span class="line">&#123;</span><br><span class="line">  NSDictionary *data = @&#123;@&quot;success&quot;:@YES,@&quot;message&quot;:[message stringByAppendingString:@&quot; (send event)&quot;]&#125;;</span><br><span class="line">  [self sendEventWithName:@&quot;PushMessage&quot; body:data];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (NSArray&lt;NSString *&gt; *)supportedEvents &#123;</span><br><span class="line">  return @[@&quot;PushMessage&quot;];</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>首先在<code>android/app/src/main/java/com/(your-app-name)/</code>文件夹下创建一个<code>MessageBridge</code>类，继承ReactContextBaseJavaModule。</p><p>然后要实现<code>ReactContextBaseJavaModule</code>中的<code>getName</code>方法，这个方法返回JavaScript调用时需要的类名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.Arguments;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactContextBaseJavaModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactMethod;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.WritableMap;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.modules.core.DeviceEventManagerModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.uimanager.IllegalViewOperationException;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.Promise;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageBridge</span> <span class="keyword">extends</span> <span class="title">ReactContextBaseJavaModule</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"MessageBridge"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在同一个目录下创建一个CustomReactPackages.java文件，这个文件用来导出自定的package名字，文件内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.facebook.react.ReactPackage;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.NativeModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.uimanager.ViewManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomReactPackages</span> <span class="keyword">implements</span> <span class="title">ReactPackage</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;ViewManager&gt; <span class="title">createViewManagers</span><span class="params">(ReactApplicationContext reactContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;NativeModule&gt; <span class="title">createNativeModules</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            ReactApplicationContext reactContext)</span> </span>&#123;</span><br><span class="line">        List&lt;NativeModule&gt; modules = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        modules.add(<span class="keyword">new</span> MessageBridge(reactContext)); <span class="comment">// &lt;-- 添加刚创建的类名</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> modules;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后在MainApplication.java文件中添加CustomToastPackage()：</p><blockquote><p>注意是MainApplication.java不是MainActivity.java，之前弄错了bug调的我怀疑人生。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> List&lt;ReactPackage&gt; <span class="title">getPackages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line">            <span class="keyword">new</span> MainReactPackage(),</span><br><span class="line">            <span class="keyword">new</span> CustomToastPackages()); <span class="comment">// &lt;-- package name.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回调消息-1"><a href="#回调消息-1" class="headerlink" title="回调消息"></a>回调消息</h2><p>安卓也可以直接实现一个Promise给React-Native。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ReactMethod</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMessage</span><span class="params">(String message, Promise promise)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        WritableMap data = Arguments.createMap();</span><br><span class="line">        data.putString(<span class="string">"status"</span>,<span class="string">"success"</span>);</span><br><span class="line">        data.putString(<span class="string">"message"</span>, message + <span class="string">" (promise)"</span>);</span><br><span class="line">        promise.resolve(data);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(IllegalViewOperationException e)&#123;</span><br><span class="line">        promise.reject(<span class="string">"error"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中注释@ReactMethod是为了将方法暴露给JavaScript。加了@ReactMethod后会将Java变量类型一一映射成JavaScript的变量类型</p><blockquote><p>Boolean -&gt; Bool<br>Integer -&gt; Number<br>Double -&gt; Number<br>Float -&gt; Number<br>String -&gt; String<br>Callback -&gt; function<br>ReadableMap -&gt; Object<br>ReadableArray -&gt; Array</p></blockquote><p>JavaScript端代码跟iOS一样，使用<code>await</code>关键字就可以得到回调的值了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> getMessage() &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> data = <span class="keyword">await</span> MessageBridge.getMessage(<span class="string">'Get Message'</span>);</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123; <span class="string">"getMessage"</span>: data.message &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="推送消息-1"><a href="#推送消息-1" class="headerlink" title="推送消息"></a>推送消息</h2><p>安卓中推送消息给<code>React-Native</code>最简单的方法就是通过使用<code>ReactContext</code>中的<code>RCTDeviceEventEmitter</code>方法，如下面代码所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendEvent</span><span class="params">(ReactContext reactContext,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String eventName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       @Nullable WritableMap params)</span> </span>&#123;</span><br><span class="line">    reactContext</span><br><span class="line">            .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)</span><br><span class="line">            .emit(eventName, params);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ReactMethod</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pushMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    WritableMap data = Arguments.createMap();</span><br><span class="line">    data.putString(<span class="string">"status"</span>,<span class="string">"success"</span>);</span><br><span class="line">    data.putString(<span class="string">"message"</span>,message + <span class="string">" (send event)"</span>);</span><br><span class="line">    <span class="keyword">this</span>.sendEvent(<span class="keyword">this</span>.mReactContext,<span class="string">"PushMessage"</span>,data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在JavaScript端可以直接使用<code>DeviceEventEmitter</code>来监听事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">componentWillMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  DeviceEventEmitter.addListener(<span class="string">'keyboardWillShow'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e: Event</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// handle event.</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Demo 地址：<a href="https://github.com/cydjohn/RNNativeModules" target="_blank" rel="noopener">https://github.com/cydjohn/RNNativeModules</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候React-Native需要访问原生API，但是官方并没有封装，这时候就需要自己手动调用原生代码，比如调用安卓的Toast，比如需要调用某些硬件接口。这篇文章主要记录了如何调用安卓和iOS原生方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React-Native" scheme="http://caoyudong.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>RTMP Ubuntu 18.04 配置</title>
    <link href="http://caoyudong.com/2018/12/02/RTMP-Ubuntu-18-04-%E9%85%8D%E7%BD%AE/"/>
    <id>http://caoyudong.com/2018/12/02/RTMP-Ubuntu-18-04-配置/</id>
    <published>2018-12-02T08:20:10.000Z</published>
    <updated>2018-12-02T08:21:51.623Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Digital Ocean Ubuntu 18.04 x64</p></blockquote><a id="more"></a><h2 id="安装-Nginx-和-Nginx-RTMP"><a href="#安装-Nginx-和-Nginx-RTMP" class="headerlink" title="安装 Nginx 和 Nginx-RTMP"></a>安装 Nginx 和 Nginx-RTMP</h2><p>首先下载依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-dev</span><br></pre></td></tr></table></figure><p>创建一个工作目录（可以起别的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/working</span><br><span class="line"><span class="built_in">cd</span> ~/working</span><br></pre></td></tr></table></figure><p>下载<code>Nginx</code>和<code>Nginx-RTMP</code>源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget  http://nginx.org/download/nginx-1.15.7.tar.gz</span><br><span class="line">wget https://github.com/arut/nginx-rtmp-module/archive/master.zip</span><br></pre></td></tr></table></figure><p>安装一个解压工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install unzip</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf  nginx-1.15.7</span><br><span class="line">unzip master.zip</span><br></pre></td></tr></table></figure><p>进入<code>nginx</code>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  nginx-1.15.7</span><br></pre></td></tr></table></figure><p>添加编译的配置，把 <code>nginx-rtmp</code>模块加到里面（后面的<code>--without-http_gzip_module</code>应该可以不加，但是如果在<code>digital ocean</code>上不添加会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-http_ssl_module --add-module=../nginx-rtmp-module-master --without-http_gzip_module</span><br></pre></td></tr></table></figure><p>编译<code>nginx</code>和<code>nginx-rtmp</code>模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>安装nginx初始化脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginx</span><br><span class="line">sudo chmod +x /etc/init.d/nginx</span><br><span class="line">sudo update-rc.d nginx defaults</span><br></pre></td></tr></table></figure><p>测试nginx（运行了sudo service nginx start看能否访问那个服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx start</span><br><span class="line">sudo service nginx stop</span><br></pre></td></tr></table></figure><h2 id="安装-FFmpeg"><a href="#安装-FFmpeg" class="headerlink" title="安装 FFmpeg"></a>安装 FFmpeg</h2><p>添加 FFmpeg PPA（Personal Package Archives）.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:kirillshkrogalev/ffmpeg-next</span><br><span class="line">Update the package lists.</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>安装 FFmpeg.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ffmpeg</span><br></pre></td></tr></table></figure><h2 id="修改-Nginx-RTMP-和-FFmpeg-配置文件"><a href="#修改-Nginx-RTMP-和-FFmpeg-配置文件" class="headerlink" title="修改 Nginx-RTMP 和 FFmpeg 配置文件"></a>修改 <code>Nginx-RTMP</code> 和 <code>FFmpeg</code> 配置文件</h2><p>打开<code>Nginx</code>配置文件（这里vi或者vim都可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>在末尾复制粘贴以下信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">            listen 1935;</span><br><span class="line">            chunk_size 4096;</span><br><span class="line"></span><br><span class="line">            application live &#123;</span><br><span class="line">                    live on;</span><br><span class="line">                    record off;</span><br><span class="line">                    exec ffmpeg -i rtmp://localhost/live/$name -threads 1 -c:v libx264 -profile:v baseline -b:v 350K -s 640x360 -f flv -c:a aac -ac 1 -strict -2 -b:a 56k rtmp://localhost/live360p/$name;</span><br><span class="line">            &#125;</span><br><span class="line">            application live360p &#123;</span><br><span class="line">                    live on;</span><br><span class="line">                    record off;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><p>这时候就配置好了。</p><p>iOS同学可以用 <a href="https://github.com/LaiFengiOS/LFLiveKit" target="_blank" rel="noopener">https://github.com/LaiFengiOS/LFLiveKit</a> 来测试，如果配置成功可直接连上。</p><blockquote><p>需要修改<code>LFLivePreview.m</code>的第364行：@”rtmp://&lt;服务器IP&gt;:1935/live/test”， test 那里可以随意取名字.      </p><p><code>rtmp://138.68.7.200:1935/live/test</code> 这是我自己配置的服务器，我已经确定可以使用了</p></blockquote><blockquote><p>参考自 <a href="https://www.vultr.com/docs/setup-nginx-rtmp-on-ubuntu-14-04" target="_blank" rel="noopener">https://www.vultr.com/docs/setup-nginx-rtmp-on-ubuntu-14-04</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Digital Ocean Ubuntu 18.04 x64&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="网络" scheme="http://caoyudong.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Angular2+项目中添加Bootstrap</title>
    <link href="http://caoyudong.com/2018/10/19/Angular2-%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0Bootstrap/"/>
    <id>http://caoyudong.com/2018/10/19/Angular2-项目中添加Bootstrap/</id>
    <published>2018-10-19T05:35:33.000Z</published>
    <updated>2018-10-19T05:38:06.132Z</updated>
    
    <content type="html"><![CDATA[<p>大部分内容翻译自 <a href="https://github.com/angular/angular-cli/wiki/stories-include-bootstrap" target="_blank" rel="noopener">https://github.com/angular/angular-cli/wiki/stories-include-bootstrap</a></p><p>Boostrap是一款很好用的CSS框架，但是如何把它加到Angular2项目里好像中文文档写的很少。下面就介绍下如何讲Bootstrap添加到Angular2+项目中。</p><a id="more"></a><h2 id="如果你使用CSS"><a href="#如果你使用CSS" class="headerlink" title="如果你使用CSS"></a>如果你使用CSS</h2><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>先新建一个Angular2 项目然后cd到项目目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ng new my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br></pre></td></tr></table></figure><h3 id="安装Bootstrap"><a href="#安装Bootstrap" class="headerlink" title="安装Bootstrap"></a>安装Bootstrap</h3><p>新建好项目之后就需要将Bootstrap添加到项目中。使用—save可以把依赖顺便添加到package.json文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap --save</span><br></pre></td></tr></table></figure><h3 id="修改项目配置"><a href="#修改项目配置" class="headerlink" title="修改项目配置"></a>修改项目配置</h3><p>找到项目中的angular.json文件。在文件中的projects.architect.build.options下找到style属性。添加一条到bootstrap.min.css的路径。</p><p>配置文件build部分如下所示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"build": &#123;</span><br><span class="line">  "options": &#123;</span><br><span class="line">    "styles": [</span><br><span class="line">      "./node_modules/bootstrap/dist/css/bootstrap.min.css",</span><br><span class="line">      <span class="string">"styles.css"</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>官网的路径写的是<code>../node_modules/bootstrap/dist/css/bootstrap.min.css</code> 但是我觉得他们可能写错了，node_modules和angular.json明明在同一层级。</p></blockquote><h3 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h3><p>在app.component.html 添加以下代码，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Test Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后通过ng serve运行项目，打开浏览器访问<code>localhost:4200</code>，查看按钮样式是否改变。</p><h2 id="如果你使用SASS"><a href="#如果你使用SASS" class="headerlink" title="如果你使用SASS"></a>如果你使用SASS</h2><h3 id="新建项目-1"><a href="#新建项目-1" class="headerlink" title="新建项目"></a>新建项目</h3><p>先新建一个Angular2 项目然后cd到项目目录下。（注意这次有–style=scss）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ng new my-app --style=scss</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br></pre></td></tr></table></figure><h3 id="安装Bootstrap-1"><a href="#安装Bootstrap-1" class="headerlink" title="安装Bootstrap"></a>安装Bootstrap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap --save</span><br></pre></td></tr></table></figure><h3 id="修改项目配置-1"><a href="#修改项目配置-1" class="headerlink" title="修改项目配置"></a>修改项目配置</h3><p>在 src/文件夹下新建一个文件_variables.scss。</p><p>将以下内容添加到_variables.scss文件中：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$icon-font-path</span>: <span class="string">'../node_modules/bootstrap-sass/assets/fonts/bootstrap/'</span>;</span><br></pre></td></tr></table></figure><p>在项目根目录下找到 styles.scss文件添加以下内容：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'variables'</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">'../node_modules/bootstrap/scss/bootstrap'</span>;</span><br></pre></td></tr></table></figure><h3 id="测试项目-1"><a href="#测试项目-1" class="headerlink" title="测试项目"></a>测试项目</h3><p>在app.component.html 添加以下代码，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Test Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后通过ng serve运行项目，打开浏览器访问localhost:4200，查看按钮样式是否改变。</p><p>为了确保项目已经配置好，可以打开_variables.scss添加：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$primary</span>: red;</span><br></pre></td></tr></table></figure><p>然后保存刷新网页查看字体颜色是否变成了红色。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大部分内容翻译自 &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-include-bootstrap&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/angular/angular-cli/wiki/stories-include-bootstrap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Boostrap是一款很好用的CSS框架，但是如何把它加到Angular2项目里好像中文文档写的很少。下面就介绍下如何讲Bootstrap添加到Angular2+项目中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Angular" scheme="http://caoyudong.com/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>CMMotionActivityManager</title>
    <link href="http://caoyudong.com/2018/09/24/CMMotionActivityManager/"/>
    <id>http://caoyudong.com/2018/09/24/CMMotionActivityManager/</id>
    <published>2018-09-25T02:14:44.000Z</published>
    <updated>2018-10-19T05:42:17.922Z</updated>
    
    <content type="html"><![CDATA[<p>现在很多应用都需要检测用户的运动情况，而iPhone上有一整套传感器可以帮助开发者确定用户的运动状况例如 气压计，陀螺仪，磁强计，加速度传感器和GPS模块，然而这些传感器模块的数据需要通过CPU计算得到判断得到结果，如果一直在后台运行程序来不断获取数据容易让app变得十分耗电，比如美国的一家新型保险公司root。他们通过app来检测得到用户的驾驶数据，然后通过计算得到用户的驾驶习惯，评估之后会给出用户相应的保险报价。比如这个人加速过快或者转弯过猛就说明这个人驾驶习惯不好，保险费用就会相对来说高一些。然后我下载了这个app之后惊奇的发现，就算半夜我没开车它也一直在后台获取我的数据，导致我手机一晚上耗电百分之十几（新的iPhone 8P，平时一晚上大约掉1%的电）</p><a id="more"></a><h2 id="M系列协处理器"><a href="#M系列协处理器" class="headerlink" title="M系列协处理器"></a>M系列协处理器</h2><p>对于这个问题，苹果有更好的解决办法了。自从2013年的iPhone5s之后每一台iPhone和Apple Watch上都装上了<strong>M系列</strong>协处理器。通过这个专用硬件系统可以将所有传感器处理工作从CPU上卸载掉，从而减少电量的使用。CMMotionActivityManager 由 Core Motion 框架提供。Core Motion 通过调用<strong>M系列</strong>协处理器来获取用户运动情况。</p><h2 id="CMMotionActivity"><a href="#CMMotionActivity" class="headerlink" title="CMMotionActivity"></a>CMMotionActivity</h2><p>CMMotionActivity 对每种运动都会有个布尔值属性，并且还有一个设备是否处于静止状态的属性。也就是说用户可能同时处于多个状态，比如开着车突然停在了红灯前，那么 automotive和 stationary都会为 ture。</p><p>属性列表如下：</p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:left">stationary</td><td style="text-align:left">禁止状态</td></tr><tr><td style="text-align:left">walking</td><td style="text-align:left">走路</td></tr><tr><td style="text-align:left">running</td><td style="text-align:left">跑步</td></tr><tr><td style="text-align:left">cycling</td><td style="text-align:left">自行车</td></tr><tr><td style="text-align:left">automotive</td><td style="text-align:left">交通工具（如果是在陆地上可以视为开车，如果是在水里可以视为在坐船）</td></tr><tr><td style="text-align:left">unknown</td><td style="text-align:left">无法识别</td></tr></tbody></table><p>为了方便理解我自己写了个app，放几张截图来解释下，其中红色背景代表熟悉布尔值为<code>false</code>的情况，绿色为<code>true</code>的情况：</p><p>这是你在开车 <em>（刚开始开车不会识别，大约行驶1分钟之后显示为在开车）</em>：</p><p><img src="../../../../../image/d7fbe7a4-ae14-45bf-a3e7-1cb23e7f2640.PNG" alt=""></p><p>这是你开车停到了红灯前：</p><p><img src="../../../../../image/359d0179-68d9-4e40-8bab-f4f927cafd66.PNG" alt=""></p><p>这是手机放着不动：</p><p><img src="../../../../../image/7aff2260-cb42-4b58-8d23-87a981ddb981.PNG" alt=""></p><p>这是跑步或者你快速的摇手机：</p><p><img src="../../../../../image/e62d20ad-05a2-46d7-9e40-ec072d1a07c2.PNG" alt=""></p><p>这是人在走路或者慢慢的摇手机：</p><p><img src="../../../../../image/8113be39-f23f-408d-b3c1-686b937caee3.PNG" alt=""></p><h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> CoreMotion</span><br><span class="line"><span class="keyword">let</span> manager = <span class="type">CMMotionActivityManager</span>()</span><br><span class="line">manager.startActivityUpdates(to: .main) &#123; (activity) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> activity = activity <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> activity.walking &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"🚶‍"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> activity.running &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"🏃‍"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> activity.cycling &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"🚴‍"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> activity.automotive &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"🚗"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> activity.stationary &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"🛑"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://developer.apple.com/documentation/coremotion/cmmotionactivity" target="_blank" rel="noopener">https://developer.apple.com/documentation/coremotion/cmmotionactivity</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在很多应用都需要检测用户的运动情况，而iPhone上有一整套传感器可以帮助开发者确定用户的运动状况例如 气压计，陀螺仪，磁强计，加速度传感器和GPS模块，然而这些传感器模块的数据需要通过CPU计算得到判断得到结果，如果一直在后台运行程序来不断获取数据容易让app变得十分耗电，比如美国的一家新型保险公司root。他们通过app来检测得到用户的驾驶数据，然后通过计算得到用户的驾驶习惯，评估之后会给出用户相应的保险报价。比如这个人加速过快或者转弯过猛就说明这个人驾驶习惯不好，保险费用就会相对来说高一些。然后我下载了这个app之后惊奇的发现，就算半夜我没开车它也一直在后台获取我的数据，导致我手机一晚上耗电百分之十几（新的iPhone 8P，平时一晚上大约掉1%的电）&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://caoyudong.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>TypeError:undefined is not an object (evaluating context._currentValue = currentValue)</title>
    <link href="http://caoyudong.com/2018/09/21/TypeError-undefined-is-not-an-object-evaluating-context-currentValue-currentValue/"/>
    <id>http://caoyudong.com/2018/09/21/TypeError-undefined-is-not-an-object-evaluating-context-currentValue-currentValue/</id>
    <published>2018-09-22T04:21:11.000Z</published>
    <updated>2018-09-25T03:24:52.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修复-TypeError-undefined-is-not-an-object-evaluating-39-context-currentValue-currentValue-39-的报错"><a href="#修复-TypeError-undefined-is-not-an-object-evaluating-39-context-currentValue-currentValue-39-的报错" class="headerlink" title="修复 TypeError: undefined is not an object (evaluating &#39;context._currentValue = currentValue&#39;)的报错"></a>修复 <code>TypeError: undefined is not an object (evaluating &#39;context._currentValue = currentValue&#39;)</code>的报错</h2><p>把<code>package.js</code>里面<code>react</code> 和 <code>react-native</code> 改成以下版本：</p><blockquote><p>“react”: “16.3.1”<br>“react-native”: “^0.57.0”</p></blockquote><p><strong>之前是：”react”: “16.3.0-rc.0”</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修复-TypeError-undefined-is-not-an-object-evaluating-39-context-currentValue-currentValue-39-的报错&quot;&gt;&lt;a href=&quot;#修复-TypeError-undefined-is-
      
    
    </summary>
    
    
      <category term="React-Native" scheme="http://caoyudong.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>259. 3Sum Smaller</title>
    <link href="http://caoyudong.com/2018/07/17/259-3Sum-Smaller/"/>
    <id>http://caoyudong.com/2018/07/17/259-3Sum-Smaller/</id>
    <published>2018-07-17T21:38:10.000Z</published>
    <updated>2018-09-12T05:56:07.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Given an array of n integers nums and a target, find the number of index triplets <code>i, j, k</code> with <code>0 &lt;= i &lt; j &lt; k &lt; n</code>that satisfy the condition <code>nums[i] + nums[j] + nums[k] &lt; target</code>.</p><p><strong>Example:</strong></p><blockquote><p><strong>Input:</strong> nums = [-2,0,1,3], and target = 2<br><strong>Output:</strong> 2<br><strong>Explanation:</strong> Because there are two triplets which sums  are less than 2:<br>            [-2,0,1]<br>            [-2,0,3]</p></blockquote><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>跟 3Sum 类似，但是这题只用求count个数。所以当second 和 third满足条件时，<code>[second,third]</code>这个区间都满足条件，于是 计算<code>count += third - second</code>就可以了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">threeSumSmaller</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.size()&lt;<span class="number">3</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    sort(nums.begin(),nums.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> first = <span class="number">0</span>;first&lt;nums.size()<span class="number">-2</span>;first++) &#123;</span><br><span class="line">        <span class="keyword">int</span> second = first + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> third = nums.size()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(second&lt;third) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[first] + nums[second] + nums[third]&lt;target) &#123;</span><br><span class="line">                count += third - second;</span><br><span class="line">                second ++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                third --;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Given an array of n integers nums and a target, find the number of index triplets &lt;code&gt;i, j, k&lt;/code&gt; with &lt;code&gt;0 &amp;lt;= i &amp;lt; j &amp;lt; k &amp;lt; n&lt;/code&gt;that satisfy the condition &lt;code&gt;nums[i] + nums[j] + nums[k] &amp;lt; target&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; nums = [-2,0,1,3], and target = 2&lt;br&gt;&lt;strong&gt;Output:&lt;/strong&gt; 2&lt;br&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; Because there are two triplets which sums  are less than 2:&lt;br&gt;            [-2,0,1]&lt;br&gt;            [-2,0,3]&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>16. 3Sum Closest</title>
    <link href="http://caoyudong.com/2018/07/17/16-3Sum-Closest/"/>
    <id>http://caoyudong.com/2018/07/17/16-3Sum-Closest/</id>
    <published>2018-07-17T20:18:52.000Z</published>
    <updated>2018-09-12T05:56:07.685Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Given an array <code>nums</code> of n integers and an integer <code>target</code>, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p><p>Example:</p><p>Given array nums = [-1, 2, 1, -4], and target = 1.</p><p>The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>跟<a href="http://caoyudong.com/2018/01/23/15-3Sum/">15. 3Sum</a>差不多，把数组排序之后依次比较当前得数和剩下两个数之和。</p><p>唯一的不同就是单独声明一个变量来记录最接近的那个值。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">threeSumClosest</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.size()&lt;<span class="number">3</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    sort(nums.begin(),nums.end());</span><br><span class="line">    <span class="keyword">int</span> result = nums[<span class="number">0</span>] + nums[<span class="number">1</span>] + nums[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> first = <span class="number">0</span>;first &lt; nums.size()<span class="number">-1</span>;first ++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(first &gt; <span class="number">0</span> &amp;&amp; nums[first] == nums[first<span class="number">-1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> second = first + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> third = nums.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(second &lt; third) &#123;</span><br><span class="line">            <span class="keyword">int</span> curSum = nums[first] + nums[second] + nums[third];</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(target - result)&gt;<span class="built_in">abs</span>(target - curSum)) &#123;</span><br><span class="line">                result = curSum;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(curSum == target) &#123;</span><br><span class="line">                <span class="keyword">return</span> target;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(curSum &gt; target) &#123;</span><br><span class="line">                --third;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ++second;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Given an array &lt;code&gt;nums&lt;/code&gt; of n integers and an integer &lt;code&gt;target&lt;/code&gt;, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;Given array nums = [-1, 2, 1, -4], and target = 1.&lt;/p&gt;
&lt;p&gt;The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>186. Reverse Words in a String II</title>
    <link href="http://caoyudong.com/2018/07/13/186-Reverse-Words-in-a-String-II/"/>
    <id>http://caoyudong.com/2018/07/13/186-Reverse-Words-in-a-String-II/</id>
    <published>2018-07-14T00:50:41.000Z</published>
    <updated>2018-09-12T05:56:07.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Given an input string , reverse the string word by word. </p><p><strong>Example:</strong></p><blockquote><p><strong>Input:</strong>  [“t”,”h”,”e”,” “,”s”,”k”,”y”,” “,”i”,”s”,” “,”b”,”l”,”u”,”e”]<br><strong>Output:</strong> [“b”,”l”,”u”,”e”,” “,”i”,”s”,” “,”s”,”k”,”y”,” “,”t”,”h”,”e”]</p></blockquote><p><strong>Note:</strong></p><ul><li>A word is defined as a sequence of non-space characters.</li><li>The input string does not contain leading or trailing spaces.</li><li>The words are always separated by a single space.</li></ul><p><strong>Follow up:</strong> Could you do it in-place without allocating extra space?</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先把整个数组调换一遍，再根据空格为单位，再分别调换每一个单词就好。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&amp; str,<span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(end&gt;start) &#123;</span><br><span class="line">        swap(str[start++],str[end--]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverseWords</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&amp; str)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//先把整个数组转换一遍</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = str.size()<span class="number">-1</span>;</span><br><span class="line">    reverse(str,i, j);</span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//再根据空格转换一遍</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; str.size();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">            end = i<span class="number">-1</span>;</span><br><span class="line">            reverse(str,start, end);</span><br><span class="line">            start = i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 最后一个单词</span></span><br><span class="line">    end = str.size()<span class="number">-1</span>;</span><br><span class="line">    reverse(str,start, end);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Given an input string , reverse the string word by word. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt;  [“t”,”h”,”e”,” “,”s”,”k”,”y”,” “,”i”,”s”,” “,”b”,”l”,”u”,”e”]&lt;br&gt;&lt;strong&gt;Output:&lt;/strong&gt; [“b”,”l”,”u”,”e”,” “,”i”,”s”,” “,”s”,”k”,”y”,” “,”t”,”h”,”e”]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A word is defined as a sequence of non-space characters.&lt;/li&gt;
&lt;li&gt;The input string does not contain leading or trailing spaces.&lt;/li&gt;
&lt;li&gt;The words are always separated by a single space.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Follow up:&lt;/strong&gt; Could you do it in-place without allocating extra space?&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>206. Reverse Linked List</title>
    <link href="http://caoyudong.com/2018/07/08/206-Reverse-Linked-List/"/>
    <id>http://caoyudong.com/2018/07/08/206-Reverse-Linked-List/</id>
    <published>2018-07-08T17:04:38.000Z</published>
    <updated>2018-09-12T05:56:07.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="206-Reverse-Linked-List"><a href="#206-Reverse-Linked-List" class="headerlink" title="206. Reverse Linked List"></a>206. Reverse Linked List</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Reverse a singly linked list.</p><p><strong>Example:</strong></p><blockquote><p><strong>Input:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL<br><strong>Output:</strong> 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL</p></blockquote><p><strong>Follow up:</strong></p><p>A linked list can be reversed either iteratively or recursively. Could you implement both?</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>新建一个表头，通过循环依次反转链表指针方向就好。 <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code> 变成 <code>NULL&lt;-1&lt;-2&lt;-3&lt;-4&lt;-5</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">    ListNode* result = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(head) &#123;</span><br><span class="line">        ListNode* cur = head-&gt;next;</span><br><span class="line">        head-&gt;next = result;</span><br><span class="line">        result = head;</span><br><span class="line">        head = cur;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>之前一直写错成这样是不对的，<code>cur</code>指向<code>head</code>的地址，改变了<code>cur-&gt;next</code>的值相当于改变了<code>head-&gt;next</code>的值，这样写结果只会返回链表第一个值：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">    ListNode* result = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(head) &#123;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        cur-&gt;next = result;</span><br><span class="line">        result = cur;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><a href="https://leetcode.com/problems/reverse-linked-list/discuss/58130/8ms-C++-Iterative-and-Recursive-Solutions-with-Explanations" target="_blank" rel="noopener">https://leetcode.com/problems/reverse-linked-list/discuss/58130/8ms-C++-Iterative-and-Recursive-Solutions-with-Explanations</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;206-Reverse-Linked-List&quot;&gt;&lt;a href=&quot;#206-Reverse-Linked-List&quot; class=&quot;headerlink&quot; title=&quot;206. Reverse Linked List&quot;&gt;&lt;/a&gt;206. Reverse Linked List&lt;/h1&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Reverse a singly linked list.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL&lt;br&gt;&lt;strong&gt;Output:&lt;/strong&gt; 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Follow up:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A linked list can be reversed either iteratively or recursively. Could you implement both?&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>53. Maximum Subarray</title>
    <link href="http://caoyudong.com/2018/07/05/53-Maximum-Subarray-1/"/>
    <id>http://caoyudong.com/2018/07/05/53-Maximum-Subarray-1/</id>
    <published>2018-07-06T03:31:04.000Z</published>
    <updated>2018-09-12T05:56:07.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p><p>Example:</p><p>Input: [-2,1,-3,4,-1,2,1,-5,4],<br>Output: 6<br>Explanation: [4,-1,2,1] has the largest sum = 6.<br>Follow up:</p><p>If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>只用记录两个变量，一个局部最优<code>tempSum</code>，一个全局最优<code>maxSum</code>。当局部最优小于零的时候就不考虑之前的数字，直接归零，然后依次得出全局最优。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>只用记录两个变量，一个是区间的临时总和<code>tempSum</code>，一个是和的最大值<code>maxSum</code>，然后遍历一次数组。假设遍历到第<code>n</code>个数，此时<code>tempSum = tempSum + n</code>。但是如果n之前的tempSum的值已经小于0了，我们就不用考虑他，因为下一个值不管是正数还是负数，加上<code>tempSum</code>值会变得更小。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxSum = INT_MIN, tempSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> n:nums) &#123;</span><br><span class="line">        tempSum = n + (tempSum&gt;<span class="number">0</span>?tempSum:<span class="number">0</span>);</span><br><span class="line">        maxSum = maxSum&gt;tempSum?maxSum:tempSum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后还在网上看到了动态规划法：</p><p>状态转移方程为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maxSubArray(A, i) = maxSubArray(A, i - 1) &gt; 0 ? maxSubArray(A, i - 1) : 0 + A[i];</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = A.length;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];<span class="comment">//dp[i] means the maximum subarray ending with A[i];</span></span><br><span class="line">        dp[<span class="number">0</span>] = A[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> max = dp[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            dp[i] = A[i] + (dp[i - <span class="number">1</span>] &gt; <span class="number">0</span> ? dp[i - <span class="number">1</span>] : <span class="number">0</span>);</span><br><span class="line">            max = Math.max(max, dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><a href="https://leetcode.com/problems/maximum-subarray/discuss/20193/DP-solution-and-some-thoughts" target="_blank" rel="noopener">https://leetcode.com/problems/maximum-subarray/discuss/20193/DP-solution-and-some-thoughts</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;Input: [-2,1,-3,4,-1,2,1,-5,4],&lt;br&gt;Output: 6&lt;br&gt;Explanation: [4,-1,2,1] has the largest sum = 6.&lt;br&gt;Follow up:&lt;/p&gt;
&lt;p&gt;If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>使用Hazel部署Electron更新服务器</title>
    <link href="http://caoyudong.com/2018/06/19/%E4%BD%BF%E7%94%A8Hazel%E9%83%A8%E7%BD%B2Electron%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://caoyudong.com/2018/06/19/使用Hazel部署Electron更新服务器/</id>
    <published>2018-06-19T22:13:32.000Z</published>
    <updated>2018-09-12T05:56:07.702Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/zeit/hazel" target="_blank" rel="noopener">Hazel</a>是一款轻量级的Electron 程序更新服务器，可以在<a href="https://zeit.co/now" target="_blank" rel="noopener">Now</a>上免费部署。它会自动从<code>GitHub Releases</code>中拉取更新文件，并且利用 GitHub CDN 的强大性能，下载很快。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先在自己电脑上安装一个 <a href="https://zeit.co/now#get-started" target="_blank" rel="noopener">Now桌面端</a>，然后创建一个账户登录进去。</p><p>然后通过命令行进入到项目更目录下，比如项目文件夹叫<code>app-project</code>，直接输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">now zeit/hazel</span><br></pre></td></tr></table></figure><p>然后就根据提示，输入你github的用户名<code>ACCOUNT</code>以及仓库<code>REPOSITORY</code>的名字。</p><p>之后，now会给你一个更新的URL，需要把这个URL记下来，以后用得到，比如我的就是：<code>https://electrontest-xpugzqzjyt.now.sh</code></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>在程序的主线程（main.js）里面添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, autoUpdater &#125; = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = <span class="xml"><span class="tag">&lt;<span class="name">之前的更新URL地址</span>&gt;</span></span></span><br><span class="line"><span class="xml">const feed = `$&#123;server&#125;/update/$&#123;process.platform&#125;/$&#123;app.getVersion()&#125;`</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">autoUpdater.setFeedURL(feed)</span></span><br></pre></td></tr></table></figure><p>然后就可以使用了。</p><h3 id="github端"><a href="#github端" class="headerlink" title="github端"></a>github端</h3><p>在github网页直接发布release就好。</p><p>但是需要注意的是，windows端发布需要直接上传<code>.exe</code>文件和<code>.nupkg</code>文件以及一个<code>RELEASES</code>文件。<strong>直接上传zip压缩文件是没用的！</strong></p><p>可以参考<a href="https://github.com/electron/electron-api-demos/releases" target="_blank" rel="noopener">electron-api-demos的release</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/zeit/hazel&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hazel&lt;/a&gt;是一款轻量级的Electron 程序更新服务器，可以在&lt;a href=&quot;https://zeit.co/now&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Now&lt;/a&gt;上免费部署。它会自动从&lt;code&gt;GitHub Releases&lt;/code&gt;中拉取更新文件，并且利用 GitHub CDN 的强大性能，下载很快。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Electron" scheme="http://caoyudong.com/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>Electron autoUpdater 自动更新</title>
    <link href="http://caoyudong.com/2018/06/13/Electron-autoUpdater-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    <id>http://caoyudong.com/2018/06/13/Electron-autoUpdater-自动更新/</id>
    <published>2018-06-14T03:54:43.000Z</published>
    <updated>2018-09-12T05:56:07.694Z</updated>
    
    <content type="html"><![CDATA[<p>Electron是一款可以使用 JavaScript，HTML 和 CSS构建跨平台桌面应用的框架。但是当用户获取下一个版本的时候，只能下载重新安装一遍下一个版本，十分僵硬，于是我们需要引入一个Electron自动更新的方法。</p><p>有多种方法可以更新Electron应用. 最简单并且获得官方支持的方法是利用内置的Squirrel框架和Electron的<code>autoUpdater</code>模块。但是目前<code>autoUpdater</code>只有 macOS 和 Window 支持该功能。在 Linux 上没有对自动更新程序的内置支持。</p><p>然而，各种谷歌到的官方文档和博客实在是太坑，感觉讲的都不是很详细，我这里记录汇总并加点自己的观点。</p><a id="more"></a><p>根据官方文档，有两种可以更新的方法：<a href="https://github.com/electron/update.electronjs.org" target="_blank" rel="noopener">update.electronjs.org</a>和<a href="https://github.com/electron-userland/electron-builder" target="_blank" rel="noopener">electron-builder</a>。但是官方API例子<a href="https://github.com/electron/electron-api-demos" target="_blank" rel="noopener">electron-api-demos</a>使用的是<a href="https://github.com/electron-userland/electron-packager" target="_blank" rel="noopener">electron-packager</a>。这里我都会做讨论。</p><h2 id="平台区别"><a href="#平台区别" class="headerlink" title="平台区别"></a>平台区别</h2><p>目前<code>autoUpdater</code>只有 macOS 和 Window 支持该功能。在 Linux 上没有对自动更新程序的内置支持。</p><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>在macOS上, autoUpdater模块建立在 Squirrel.Mac上,也就是说不需要任何别的设置，直接打包就可以用了。</p><p><strong>但是需要注意：macOS自动更新一定要签名！！而且一定要使用苹果开发者证书，自己生成的没有用（看别人博客说的，我自己也没试过）</strong></p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>在 Windows 上实现自动更新是通过 Squirrel.Windows。但它的处理方式与 OSX 完全不同。</p><p>与 Squirrel.Mac 不同的点在于：Squirrel.Windows 并不需要一个用于检测新版本的 API 路径，它需要的是一个文件服务器。另外，该 Squirrel 更新器并不内置于 Electron，它是一个第三方依赖。也就是说，你必须把打包的Windows应用生成一个安装程序，<strong>安装之后才可以使用！！！直接运行打包好的程序会报错。</strong>（<code>Cannot find module &#39;squirrel&#39;</code>）</p><p><img src="../../../../image/77c4cf93-211e-476a-bc49-ddead2767589.png" alt=""></p><p>打包程序见下文。</p><h2 id="Electron-packager"><a href="#Electron-packager" class="headerlink" title="Electron-packager"></a>Electron-packager</h2><p>Electron-packager 是一款命令行工具以及Node.js库，可以将Electron的应用程序以及所需代码库打包成各个平台可执行文件。</p><p>支持的平台有：</p><ul><li>Windows (32/64 bit)</li><li>OS X (also known as macOS)</li><li>Linux (x86/x86_64)</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>需要Node.js 4.0 以上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for use in npm scripts</span></span><br><span class="line">npm install electron-packager --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># for use from cli</span></span><br><span class="line">npm install electron-packager -g</span><br></pre></td></tr></table></figure><p>非windows平台上面打包windows可执行程序需要先安装<code>Wine</code>，<strong>但是按照我个人经验，在Mac上打包一次需要超过半小时（windows虚拟机可能会快点），但是同样的程序在Windows上只需要2分钟</strong></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>安装好之后直接在命令行输入一下命令就可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">electron-packager &lt;sourcedir&gt; &lt;appname&gt; --platform=&lt;platform&gt; --arch=&lt;arch&gt; [optional flags...]</span><br></pre></td></tr></table></figure><p>比如我在<code>package.json</code>里面写的就是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"package:mac"</span>: <span class="string">"electron-packager . --overwrite --platform=darwin --arch=x64 --out=out"</span>,</span><br><span class="line">    <span class="string">"package:win"</span>: <span class="string">"electron-packager . --overwrite --platform=win32 --arch=ia32 --out=out"</span>,</span><br><span class="line">    <span class="string">"package:linux"</span>: <span class="string">"electron-packager . --overwrite --platform=linux --arch=x64 --out=out"</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这样在命令行直接运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run package:win</span><br></pre></td></tr></table></figure><p>就可以打包windows平台的程序了。</p><h3 id="生成安装包"><a href="#生成安装包" class="headerlink" title="生成安装包"></a>生成安装包</h3><p>生成安装包可以使用<a href="https://github.com/electron/windows-installer" target="_blank" rel="noopener">electron-winstaller</a>。</p><p>electron-winstaller 是一个基于<code>Squirrel</code>的生成Windows安装包的 npm 模块，基本的参数说明可以到它官网上查看，这里我只是写下我自己demo的参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//windowsInstaller.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> electronInstaller = <span class="built_in">require</span>(<span class="string">'electron-winstaller'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line">resultPromise = electronInstaller.createWindowsInstaller(&#123;</span><br><span class="line">    appDirectory: <span class="string">'./out/MyApp-win32-ia32'</span>,</span><br><span class="line">    outputDirectory: <span class="string">'./windows32'</span>,</span><br><span class="line">    authors: <span class="string">'cyd'</span>,</span><br><span class="line">    exe: <span class="string">'MyApp.exe'</span>,</span><br><span class="line">    noMsi: <span class="literal">true</span>,</span><br><span class="line">    outputDirectory: path.join(<span class="string">'./out/'</span>, <span class="string">'windows-installer'</span>),</span><br><span class="line">    setupExe: <span class="string">'ElectronAPIDemosSetup.exe'</span>,</span><br><span class="line">    skipUpdateIcon: <span class="literal">true</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">resultPromise.then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">"It worked!"</span>), (e) =&gt; <span class="built_in">console</span>.log(<span class="string">`No dice: <span class="subst">$&#123;e.message&#125;</span>`</span>));</span><br></pre></td></tr></table></figure><p>在使用<code>electron-builder</code>打包之后，通过运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node ./windowsInstaller.js</span><br></pre></td></tr></table></figure><p>运行这个文件就可以在<code>windows32</code>文件夹下找到名为<code>MyApp.exe</code>的安装包。双击运行就可以自动安装。安装界面如下所示，注意这个方法不能选择安装目录，程序会自动安装到C盘。（可能作者模仿Mac简易的安装方式？</p><p>安装过程会运行一个默认的gif动画。</p><p><img src="https://github.com/cydjohn/cydjohn.github.io/raw/master/image/42892ecc-3408-4c97-8cb5-7c177c1eebd6.gif" alt=""></p><p>如果之前部署过新版程序在服务器上，双击运行程序，没什么问题应该就会看到这个画面，点击restart 就可以运行最新的程序了。</p><h2 id="Electron-builder"><a href="#Electron-builder" class="headerlink" title="Electron-builder"></a>Electron-builder</h2><p><code>electron-builder</code>是一个完整的解决方案，对于Macos、windows、linux下的electron app，它可以提供打包及构建的相关功能。同时，它还提供开箱即用的“自动更新”功能支持。</p><h3 id="部署服务器"><a href="#部署服务器" class="headerlink" title="部署服务器"></a>部署服务器</h3><p><a href="">Hazel</a> – 用于私人或开源应用的更新服务器，可以在 Now 上免费部署。 它从GitHub Releases中拉取更新文件，并且利用 GitHub CDN 的强大性能。</p><p><a href="">使用自己的服务器</a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><strong><em>注意开发的时候不要调用这些代码块，可以使用<a href="https://github.com/sindresorhus/electron-is-dev" target="_blank" rel="noopener">electron-is-dev</a>检查当前的环境</em></strong></p><p><strong><em>以下代码需要添加到<code>main.js</code>中</em></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"><span class="keyword">const</span> &#123; app, autoUpdater, dialog &#125; = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br></pre></td></tr></table></figure><p>然后构建更新服务器的URL并且通知autoUpdater:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"><span class="keyword">const</span> server = <span class="string">'https://your-deployment-url.com'</span></span><br><span class="line"><span class="keyword">const</span> feed = <span class="string">`<span class="subst">$&#123;server&#125;</span>/update/<span class="subst">$&#123;process.platform&#125;</span>/<span class="subst">$&#123;app.getVersion()&#125;</span>`</span></span><br><span class="line">  </span><br><span class="line">autoUpdater.setFeedURL(feed)</span><br></pre></td></tr></table></figure><p>最后，检查更新</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"><span class="comment">//每分钟检查一次</span></span><br><span class="line">setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    autoUpdater.checkForUpdates()</span><br><span class="line">  &#125;, <span class="number">60000</span>)</span><br></pre></td></tr></table></figure><h3 id="应用更新"><a href="#应用更新" class="headerlink" title="应用更新"></a>应用更新</h3><p>通过<code>autoUpdate</code>的API，可以知道应用更新的状态，然后来通知用户</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line">autoUpdater.on(<span class="string">'update-downloaded'</span>, (event, releaseNotes, releaseName) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> dialogOpts = &#123;</span><br><span class="line">      type: <span class="string">'info'</span>,</span><br><span class="line">      buttons: [<span class="string">'Restart'</span>, <span class="string">'Later'</span>],</span><br><span class="line">      title: <span class="string">'Application Update'</span>,</span><br><span class="line">      message: process.platform === <span class="string">'win32'</span> ? releaseNotes : releaseName,</span><br><span class="line">      detail: <span class="string">'A new version has been downloaded. Restart the application to apply the updates.'</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    dialog.showMessageBox(dialogOpts, (response) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (response === <span class="number">0</span>) autoUpdater.quitAndInstall()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>同时要确保错误已经被处理了:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line">autoUpdater.on(<span class="string">'error'</span>, message =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'There was a problem updating the application'</span>)</span><br><span class="line">    <span class="built_in">console</span>.error(message)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><hr><p><a href="https://electronjs.org/docs/tutorial/updates" target="_blank" rel="noopener">https://electronjs.org/docs/tutorial/updates</a></p><p><a href="https://electronjs.org/docs/api/auto-updater" target="_blank" rel="noopener">https://electronjs.org/docs/api/auto-updater</a></p><p><a href="https://github.com/sorrycc/blog/issues/26" target="_blank" rel="noopener">https://github.com/sorrycc/blog/issues/26</a></p><p><a href="https://github.com/electron-userland/electron-packager" target="_blank" rel="noopener">https://github.com/electron-userland/electron-packager</a></p><p><a href="https://segmentfault.com/a/1190000010271226" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010271226</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Electron是一款可以使用 JavaScript，HTML 和 CSS构建跨平台桌面应用的框架。但是当用户获取下一个版本的时候，只能下载重新安装一遍下一个版本，十分僵硬，于是我们需要引入一个Electron自动更新的方法。&lt;/p&gt;
&lt;p&gt;有多种方法可以更新Electron应用. 最简单并且获得官方支持的方法是利用内置的Squirrel框架和Electron的&lt;code&gt;autoUpdater&lt;/code&gt;模块。但是目前&lt;code&gt;autoUpdater&lt;/code&gt;只有 macOS 和 Window 支持该功能。在 Linux 上没有对自动更新程序的内置支持。&lt;/p&gt;
&lt;p&gt;然而，各种谷歌到的官方文档和博客实在是太坑，感觉讲的都不是很详细，我这里记录汇总并加点自己的观点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Electron" scheme="http://caoyudong.com/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>如果你在墨西哥旅游又丢了带有美国签证的中国护照你该怎么办</title>
    <link href="http://caoyudong.com/2018/05/21/%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%9C%A8%E5%A2%A8%E8%A5%BF%E5%93%A5%E6%97%85%E6%B8%B8%E5%8F%88%E4%B8%A2%E4%BA%86%E5%B8%A6%E6%9C%89%E7%BE%8E%E5%9B%BD%E7%AD%BE%E8%AF%81%E7%9A%84%E4%B8%AD%E5%9B%BD%E6%8A%A4%E7%85%A7%E4%BD%A0%E8%AF%A5%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
    <id>http://caoyudong.com/2018/05/21/如果你在墨西哥旅游又丢了带有美国签证的中国护照你该怎么办/</id>
    <published>2018-05-21T23:36:41.000Z</published>
    <updated>2019-05-21T23:43:09.695Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章<a href="http://www.mafengwo.cn/i/9239225.html" target="_blank" rel="noopener">转自</a>我室友，发生在他带妹去墨西哥旅游的时候，当时处境十分窘迫。我还没去过墨西哥，但是听他描述墨西哥貌似警匪一家，对外地游客十分不友好，感觉记录一下还是很有必要的，难说我去的时候就用到了（希望用不到，毕竟比他精</p><a id="more"></a><p><strong>以下是原文</strong></p><hr><p>本人 美国 F1留学生，春假去 墨西哥 玩耍，不幸丢失护照两份，现已 成功 回到 美国 上学，将经验撰写于此，以供后人参考借鉴。</p><p>现在已经是研究生第二年，早在第一年的冬天，曾被在 墨西哥 读书的朋友推荐，去过 坎昆 和 古巴 ，对于拉美人的热情和漂亮小姐姐有着深刻的印象，所以春假赶上 秘鲁 雨季机票又贵得离谱的时候选择再一次来到了 墨西哥 。<br>刚到 墨西哥城 的时候手机就被小偷使用连环计偷了，好在同行妹子还有一个手机，便由人家carry全程。不想到临走的倒数第二天，在卡门海滩，护照丢了。<br>在 坎昆 租车，去Xcaret玩之后，晚上在卡门吃饭，吃饭的时候，包扔在车里，被盗贼砸碎车玻璃，妹子的包被拿走。我们两本护照都在其中。</p><p>（当然如果你的I20丢了那请老老实实的叫学校再给你邮一份，预计时间多加一周）</p><h2 id="报警篇"><a href="#报警篇" class="headerlink" title="报警篇"></a>报警篇</h2><p>首先，丢了东西肯定要报警，虽然你在 墨西哥 丢了东西真的不要指望还能拿回来。但是警察可以为你开具一个证明，这个证明能够证明你丢了护照。而你拿的这张纸，可以在 墨西哥 境内充当护照一样的存在，坐飞机，住酒店。据警察解释说，因为丢护照的人太多，所以他们国家就弄出了这么个证明，来替代身份证件。当然这张纸之后还有大用处，一定一定要保留好并且多复印！<br>说到沟通，我感觉除了 坎昆 的警察和 墨西哥城 等 大城 市的部分警察外，英语并不能有效的沟通。只能用肢体语言和谷歌来交流，不过开具证明并不是警察当面开，而是在专门的地方，那里应该会有说英语的人。当然，浪漫的 墨西哥 人们可不一定每天都上班。<br>说句实话，就我个人而言，因为先后来两次 墨西哥 ，和警察打过三次交道，以及之前 墨西哥 同学的经历， 我觉得，这个国家的警察和我们国家的警察是并不能比。在 美国 从来没和警察打过交道并不知道什么样，但是 墨西哥 的警察是可以和小偷一起分赃的，这边给小偷打着保护伞，另一边从小偷那里收好处费。同时，他们也会勒索游客（我）。所以基于这一点，如果说你的东西丢了，警察又表示可以帮你看看，你就可以委婉的 和警察说，提供佣金啊什么的，看看他愿不愿意。</p><h2 id="中国大使馆篇"><a href="#中国大使馆篇" class="headerlink" title="中国大使馆篇"></a>中国大使馆篇</h2><p>（我觉得如果真的丢了护照打开了这个攻略相信你已经报完警了，所以请戳这里…..）<br>在国外的 中国 公民出了事情，大使馆肯定是可以求助的地方。 中国 驻 墨西哥 大使馆在 墨西哥城 ， 蒂华纳 有一个领馆。如果你的护照丢了，请第一时间联系大使馆， <a href="http://mx.china-embassy.org/chn/" target="_blank" rel="noopener">http://mx.china-embassy.org/chn/</a> 点击领侨服务，里面有地址和电话，24小时服务热线就是为你而准备的。打完之后，里面的小哥哥会告诉你需要如何到 墨西哥城 中国 使馆并携带什么资料。（警察的report，咱们护照尺寸的照片和装有电子版的CD，证明你身份的一切证件，填好的旅行证申请表，护照丢失情况说明大使馆将会有单独的印好格式的纸给你，可以到大使馆再写）大使馆会给你提供旅行证作为你的临时护照，但作为旅游者，并不能给你办护照，只能提供旅行证。<br>大使馆的效率还是很高的，早上9点去的话，大概一天就下来了，之间要拿着收据走去汇丰银行交款，只收现金。<br>我去的时候赶上什么假日，银行不开门，耽搁了一天，使馆说第二天来取。第二天早上交完钱，拿着凭条在大使馆就取到了。</p><h2 id="美国大使馆篇"><a href="#美国大使馆篇" class="headerlink" title="美国大使馆篇"></a>美国大使馆篇</h2><p>拿到了旅行证之后，紧接着需要办的就是F1签证.<br>墨西哥 的 美国 签证办理方式与 中国 有一点不同， 墨西哥城 的大使馆申请时，照片采集工作需要由一个 墨西哥 政府运营的中心统一进行采集，也就是说，需要预约两次，所以我的建议就是，当你拿到旅行证之后，就可以直接打车到hamburgo 213这个地址….（希望我没有打错）去跟门口的工作人员讲，我丢了签证，我要emergency，他就会带你进去一个咨询的窗口，告诉你具体的流程。当然，预约要在你的DS160填完之后。不过我建议先去一次问清楚，至少混个脸熟，这样就可以插队( •̀ ω •́ )y 毕竟咱们也算是外国人特权。在那个咨询窗口，他可能会告诉你现在已经预约到好久之后了，不用管他，先去混脸熟。DS160需要自己在网上填写，写的时候和原来在国内申请时候一样，申请之后就会有时间，你选两个预约的时间，一般照相采集就可以第二天，但是签证要很久。（ 墨西哥城 大使馆还是很火的）<br>预约了时间之后，一定一定要写邮件给 美国 大使馆，介绍你的情况，申请加急。我下午4点钟写的邮件，不到5点就回复了，同意加急，并且把时间线发给了我。最后我是上午9点进行了照片和指纹采集，采集之后直接走进大使馆办理签证，办签证的时候实话实说。去之前，警察给开的丢失证明多复印几份，因为 美国 大使馆要把原件收走存档，所以建议备好复印件，以备不时之需。面试的时候也一定要跟签证官说尽量快一点。<br>我当时去的时候是中午，但是第二天下午三点，就可以走进大使馆领取护照了。拿到护照，就很顺利的回到美国。</p><h2 id="后遗症篇"><a href="#后遗症篇" class="headerlink" title="后遗症篇"></a>后遗症篇</h2><p>旅行证上写着与护照同等效力，有效期为两年，回到 美国 可以去大使馆换护照，换的时候记得告诉使馆工作人员美签那页不要剪角。而我并没有换，于是有了现在这一幕， 中国 护照持美签 香港 转机可以入境 香港 ，然而旅行证并不能入境，于是刚刚在 香港 入境处拿着旅行证的我被活生生的拒绝了并在入境处大吵了一架，现在默默地在 香港 机场楼上喝啤酒….把这篇文章敲完。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章&lt;a href=&quot;http://www.mafengwo.cn/i/9239225.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;转自&lt;/a&gt;我室友，发生在他带妹去墨西哥旅游的时候，当时处境十分窘迫。我还没去过墨西哥，但是听他描述墨西哥貌似警匪一家，对外地游客十分不友好，感觉记录一下还是很有必要的，难说我去的时候就用到了（希望用不到，毕竟比他精&lt;/p&gt;
    
    </summary>
    
    
      <category term="旅行" scheme="http://caoyudong.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Electron中使用Bootstrap和JQuery</title>
    <link href="http://caoyudong.com/2018/05/01/Electron%E4%B8%AD%E4%BD%BF%E7%94%A8Bootstrap%E5%92%8CJQuery/"/>
    <id>http://caoyudong.com/2018/05/01/Electron中使用Bootstrap和JQuery/</id>
    <published>2018-05-01T22:07:57.000Z</published>
    <updated>2018-09-12T05:56:07.694Z</updated>
    
    <content type="html"><![CDATA[<p>一般网页都可以直接使用<code>bootstrap</code>和<code>JQuery</code> 的CDN来请求<code>bootstrap</code>和<code>JQuery</code>。但是做electron应用的时候希望做成本地的，因为不是每时每刻都可以联网。原以为 <code>npm</code> 安装之后直接用就可以，结果遇到了很多坑，这里记录下。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先使用npm安装bootstrap 和 JQuery</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap --save</span><br><span class="line">npm install JQuery --save</span><br></pre></td></tr></table></figure><p>然后就会发现有一行警告</p><blockquote><p>npm WARN <a href="mailto:bootstrap@4.1.1" target="_blank" rel="noopener">bootstrap@4.1.1</a> requires a peer of popper.js@^1.14.3 but none is installed. You must install peer dependencies yourself.</p></blockquote><p>于是还需要安装 <code>popper.js</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install popper.js --save</span><br></pre></td></tr></table></figure><p>安装部分就完成了。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>bootstrap 直接从安装文件里面拿就好，地址是 <code>./node_modules/bootstrap/dist/css/bootstrap.min.css</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./node_modules/bootstrap/dist/css/bootstrap.min.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JQuery 就很坑了，google了好多资料，electron里面你应该这么写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">window</span>.$ = <span class="built_in">window</span>.jQuery = <span class="built_in">require</span>(<span class="string">'jquery'</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不然会报错，很多神奇的错误。</p><hr><h2 id="关于bootstrap-datepicker的一个坑"><a href="#关于bootstrap-datepicker的一个坑" class="headerlink" title="关于bootstrap-datepicker的一个坑"></a>关于bootstrap-datepicker的一个坑</h2><p><del>使用npm安装的bootstrap-datepicker完全没用，我从网上复制粘贴了整个<code>bootstrap-datepicker.js</code> 的代码，本地新建文件，然后<code>&lt;script src = &quot;bootstrap-datepicker.js&quot;&gt;&lt;/script&gt;</code>才可以正常使用</del></p><p>后来发现可以这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap-datepicker --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> <span class="built_in">require</span>(<span class="string">'bootstrap-datepicker'</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>菜的抠脚</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般网页都可以直接使用&lt;code&gt;bootstrap&lt;/code&gt;和&lt;code&gt;JQuery&lt;/code&gt; 的CDN来请求&lt;code&gt;bootstrap&lt;/code&gt;和&lt;code&gt;JQuery&lt;/code&gt;。但是做electron应用的时候希望做成本地的，因为不是每时每刻都可以联网。原以为 &lt;code&gt;npm&lt;/code&gt; 安装之后直接用就可以，结果遇到了很多坑，这里记录下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Electron" scheme="http://caoyudong.com/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>461. Hamming Distance</title>
    <link href="http://caoyudong.com/2018/04/28/461-Hamming-Distance/"/>
    <id>http://caoyudong.com/2018/04/28/461-Hamming-Distance/</id>
    <published>2018-04-28T06:09:26.000Z</published>
    <updated>2018-09-12T05:56:07.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.</p><p>Given two integers x and y, calculate the Hamming distance.</p><p>Note:<br>0 ≤ x, y &lt; 2^31 .</p><p><strong>Example:</strong></p><blockquote><p><strong>Input:</strong> x = 1, y = 4</p></blockquote><blockquote><p><strong>Output:</strong> 2</p></blockquote><blockquote><p><strong>Explanation:</strong>  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1   (0 0 0 1)    </span><br><span class="line">4   (0 1 0 0)    </span><br><span class="line">       ↑   ↑</span><br></pre></td></tr></table></figure><blockquote><p>The above arrows point to positions where the corresponding bits are different.</p></blockquote><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>题目说 y &lt; 2^31 那写一个32次的循环，依次统计一共有多少个1就好。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> s = x^y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">32</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s &amp; <span class="number">1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            result ++;</span><br><span class="line">        &#125;</span><br><span class="line">        s = s&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后看到别人思路貌似有个比32次循环更快的方法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dist = <span class="number">0</span>, n = x ^ y;</span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        ++dist;</span><br><span class="line">        n &amp;= n - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dist;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;The Hamming distance between two integers is the number of positions at which the corresponding bits are different.&lt;/p&gt;
&lt;p&gt;Given two integers x and y, calculate the Hamming distance.&lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;0 ≤ x, y &amp;lt; 2^31 .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; x = 1, y = 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt; 2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1   (0 0 0 1)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4   (0 1 0 0)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ↑   ↑&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The above arrows point to positions where the corresponding bits are different.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>14. Longest Common Prefix</title>
    <link href="http://caoyudong.com/2018/04/28/14-Longest-Common-Prefix/"/>
    <id>http://caoyudong.com/2018/04/28/14-Longest-Common-Prefix/</id>
    <published>2018-04-28T05:47:33.000Z</published>
    <updated>2018-09-12T05:56:07.685Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Write a function to find the longest common prefix string amongst an array of strings.</p><p>If there is no common prefix, return an empty string “”.</p><p><strong>Example 1:</strong></p><blockquote><p><strong>Input:</strong> [“flower”,”flow”,”flight”]<br><strong>Output:</strong> “fl”</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p><strong>Input:</strong> [“dog”,”racecar”,”car”]<br><strong>Output:</strong> “”</p></blockquote><p><strong>Explanation:</strong> There is no common prefix among the input strings.<br>Note:</p><p>All given inputs are in lowercase letters <code>a-z</code>.</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>我的思路是以第一个字符串为标准设为<code>result</code>，依次寻找每个字符串的公共前缀，如果有不一样的就从<code>result</code>里把不一样的移除，剩下的<code>result</code>就是所求的公共前缀了。</p><p>然后就是看到别人的思路：从0开始依次遍历每一个字符串，如果是公共前缀就加到<code>result</code>里。</p><blockquote><p>貌似我的比他快了一毫秒O(∩_∩)O~</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strs.size() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> result = strs[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">string</span> s:strs) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size()==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;result.size() &amp;&amp; i&lt;s.size();i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] != result[i]) &#123;</span><br><span class="line">                result.erase(i,result.size()-i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(result.size()&gt;s.size()) &#123;</span><br><span class="line">            result.erase(s.size(),result.size()-s.size());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>从0开始依次遍历每一个字符串，如果是公共前缀就加到<code>result</code>里。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++ </span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> prefix = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> idx=<span class="number">0</span>; strs.size()&gt;<span class="number">0</span>; prefix+=strs[<span class="number">0</span>][idx], idx++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;strs.size(); i++)</span><br><span class="line">            <span class="keyword">if</span>(idx &gt;= strs[i].size() ||(i &gt; <span class="number">0</span> &amp;&amp; strs[i][idx] != strs[i<span class="number">-1</span>][idx]))</span><br><span class="line">                <span class="keyword">return</span> prefix;</span><br><span class="line">    <span class="keyword">return</span> prefix;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Write a function to find the longest common prefix string amongst an array of strings.&lt;/p&gt;
&lt;p&gt;If there is no common prefix, return an empty string “”.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; [“flower”,”flow”,”flight”]&lt;br&gt;&lt;strong&gt;Output:&lt;/strong&gt; “fl”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; [“dog”,”racecar”,”car”]&lt;br&gt;&lt;strong&gt;Output:&lt;/strong&gt; “”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; There is no common prefix among the input strings.&lt;br&gt;Note:&lt;/p&gt;
&lt;p&gt;All given inputs are in lowercase letters &lt;code&gt;a-z&lt;/code&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>371. Sum of Two Integers</title>
    <link href="http://caoyudong.com/2018/04/24/371-Sum-of-Two-Integers/"/>
    <id>http://caoyudong.com/2018/04/24/371-Sum-of-Two-Integers/</id>
    <published>2018-04-24T05:34:12.000Z</published>
    <updated>2018-09-12T05:56:07.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Calculate the sum of two integers a and b, but you are not allowed to use the operator <code>+</code> and <code>-</code>.</p><p><strong>Example:</strong></p><p>Given a = 1 and b = 2, return 3.</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>不能用 <code>+</code> 号或者 <code>-</code> 号，那就只能用位操作了。位操作有四种：</p><p><code>&amp;</code> 与操作（AND operation）： 2 (0010) &amp; 7 (0111) =&gt; 2 (0010)</p><p><code>|</code> 或操作 （OR operation）： 2 (0010) | 7 (0111) =&gt; 7 (0111)</p><p><code>^</code> 异或操作 （XOR operation）： 2 (0010) ^ 7 (0111) =&gt; 5 (0101)</p><p><code>~</code> 非操作 （NOT operation）： ~2(0010) =&gt; -3 (1101) <code>补码，见文末</code></p><p>其中，最左边一位是符号位，代表正负，比如</p><p>1111 代表 -1 （补码）</p><p>1110 代表 -2</p><p>这题两个位置全为1的地方需要进一位，不全为1的地方直接异或操作就好。于是我们用一个<code>carry</code>来记录进位，每次进位完需要左移一位。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> carry = a &amp; b;</span><br><span class="line">        a = a ^ b;</span><br><span class="line">        b = carry&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSubtract</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> borrow = (~a) &amp; b;</span><br><span class="line">a = a ^ b;</span><br><span class="line">b = borrow &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Calculate the sum of two integers a and b, but you are not allowed to use the operator &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given a = 1 and b = 2, return 3.&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>167. Two Sum II - Input array is sorted</title>
    <link href="http://caoyudong.com/2018/04/23/167-Two-Sum-II-Input-array-is-sorted/"/>
    <id>http://caoyudong.com/2018/04/23/167-Two-Sum-II-Input-array-is-sorted/</id>
    <published>2018-04-24T04:50:01.000Z</published>
    <updated>2018-09-12T05:56:07.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Given an array of integers that is already <strong><em>sorted in ascending order</em></strong>, find two numbers such that they add up to a specific target number.</p><p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p><p>You may assume that each input would have exactly one solution and you may not use the same element twice.</p><p><strong>Input:</strong> numbers={2, 7, 11, 15}, target=9<br><strong>Output:</strong> index1=1, index2=2</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>跟<code>Two Sum</code>类似，不过这是排好序的，就只用用两个指针，一个指向数组头部，一个指向尾部，然后依次扫描就可以了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = numbers.size()<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;h) &#123;</span><br><span class="line">        <span class="keyword">if</span>(numbers[l]+numbers[h]==target) &#123;</span><br><span class="line">            result.push_back(l+<span class="number">1</span>);</span><br><span class="line">            result.push_back(h+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(numbers[l]+numbers[h]&gt;target) &#123;</span><br><span class="line">            h--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Given an array of integers that is already &lt;strong&gt;&lt;em&gt;sorted in ascending order&lt;/em&gt;&lt;/strong&gt;, find two numbers such that they add up to a specific target number.&lt;/p&gt;
&lt;p&gt;The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have exactly one solution and you may not use the same element twice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; numbers={2, 7, 11, 15}, target=9&lt;br&gt;&lt;strong&gt;Output:&lt;/strong&gt; index1=1, index2=2&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://caoyudong.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
